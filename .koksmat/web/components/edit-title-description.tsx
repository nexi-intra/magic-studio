/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/iTnctRl73La
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
"use client";

import { use, useEffect, useState } from "react";
import {
  Card,
  CardHeader,
  CardTitle,
  CardDescription,
  CardContent,
  CardFooter,
} from "@/components/ui/card";
import { Label } from "@/components/ui/label";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { Button } from "@/components/ui/button";
import { Popover, PopoverContent, PopoverTrigger } from "./ui/popover";
import { SaveIcon } from "lucide-react";

export function EditTitleDescription(props: {
  title: string;
  description: string;
  onSave: (title: string, description: string) => void;
  onCancel: () => void;
}) {
  const {
    title: initialTitle,
    description: initialDescription,
    onSave,
    onCancel,
  } = props;
  const [title, setTitle] = useState(initialTitle);
  const [description, setDescription] = useState(initialDescription);
  const [isValid, setisValid] = useState(false);
  const [open, setopen] = useState(false);
  // useEffect(() => {
  //   setopen(true);
  // }, []);
  useEffect(() => {
    if (!title.trim() || !description.trim()) {
      setisValid(false);
      return;
    }
    setisValid(true);
  }, [title, description]);

  return (
    <Popover open={open} onOpenChange={setopen}>
      <PopoverTrigger>
        <Button variant="outline">
          <SaveIcon className="w-4 h-4 mr-2" />
          Edit Details
        </Button>
      </PopoverTrigger>
      <PopoverContent className="w-[90vw] md:w-[75vw] lg:w-[50vw]">
        <Card className="w-full ">
          <CardHeader>
            <CardTitle>Edit Details</CardTitle>
            <CardDescription>Update the title and description.</CardDescription>
          </CardHeader>

          <CardContent className="space-y-4">
            <div className="space-y-2">
              <Label htmlFor="title">Title</Label>
              <Input
                id="title"
                value={title}
                onChange={(e) => setTitle(e.target.value)}
                required
              />
            </div>
            <div className="space-y-2">
              <Label htmlFor="description">Description</Label>
              <Textarea
                id="description"
                value={description}
                onChange={(e) => setDescription(e.target.value)}
                required
                className="min-h-[100px]"
              />
            </div>
          </CardContent>
          <CardFooter>
            <Button
              disabled={!isValid}
              className="ml-auto"
              onClick={() => {
                onSave(title, description);
                setopen(false);
              }}
            >
              Save
            </Button>
            <Button
              onClick={() => {
                onCancel();
                setopen(false);
              }}
              variant="outline"
              className="ml-2"
            >
              Cancel
            </Button>
          </CardFooter>
        </Card>
      </PopoverContent>
    </Popover>
  );
}
