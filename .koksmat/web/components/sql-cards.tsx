/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/eJHEH0Bq3hZ
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
import Link from "next/link";
import {
  Card,
  CardHeader,
  CardTitle,
  CardDescription,
  CardFooter,
} from "@/components/ui/card";
import { useSQLSelect3 } from "@/app/koksmat/usesqlselect3";
import { CardStackIcon } from "@radix-ui/react-icons";
import { ReactElement } from "react";

export interface Item {
  id: number;
  title: string;
  slug: string;
  description: string;
}

export function ShowItems(props: {
  Icon: React.ComponentType<{ className?: string }>;
  slugPrefix: string;
  items: Item[];
}) {
  const { Icon, slugPrefix } = props;
  return (
    <main className="grid flex-1 items-start gap-4 p-4 sm:px-6 sm:py-0 md:gap-8">
      <div className="grid gap-4 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4">
        {props?.items?.map((item, index) => (
          <Link
            key={index}
            href={slugPrefix + item.slug}
            className="text-primary"
            prefetch={false}
          >
            <Card>
              <CardHeader className="flex flex-col items-start gap-2">
                <Icon className="h-6 w-6 text-muted-foreground" />
                <CardTitle>{item.title}</CardTitle>
                <CardDescription>{item.description}</CardDescription>
              </CardHeader>
            </Card>{" "}
          </Link>
        ))}
      </div>
    </main>
  );
}

export default function SQLCards(props: {
  Icon?: React.ComponentType<{ className?: string }> | JSX.Element;
  slugPrefix: string;
  database: string;
  sql: string;
}) {
  let Icon: React.ComponentType<{ className?: string }>;
  if (!props.Icon) {
    Icon = CardStackIcon;
  } else {
    Icon = props.Icon as React.ComponentType<{ className?: string }>;
  }
  const databases = useSQLSelect3<Item>(props.database, props.sql);
  return <ShowItems items={databases.dataset} {...props} Icon={Icon} />;
}
